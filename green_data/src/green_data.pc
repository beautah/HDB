/* stdlib.h added by M. Bogner, Sutron Corporation  05-MAY-2011 to recompile on Linux machine  */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "dbutils.h"
#include "utils.h"
#include "defines.h"
#include "typedefs.h"
main ( int argc, char** argv )
{
  
  EXEC SQL INCLUDE SQLCA;
  
  EXEC SQL BEGIN DECLARE SECTION;
  char 		data_base[10];
  SQL_DATE      nday;
  SQL_DATE      thisday;
  short         value_null_indicator;
  float         rel,wse,inf,may,lily,jen,gre;
  
  EXEC SQL END DECLARE SECTION;
  
  char          wsec[8],infc[8];
  char          relc[8],mayc[8],lilyc[8],jenc[8],grec[8];
  SQL_DATE      hday,dt;
  int           index;
  char          *dbName;
  int           result;
  
  EXEC SQL WHENEVER SQLERROR GOTO errrpt;
  
  if (argc != 2)
    {
      printf("\nusage: green_data [gages | nogages]\n");
      exit(2);
    }
  
  /* set the name of the database */
  
  dbName = NULL; 
  dbName = getenv("HDB_LOCAL");
  
  if (dbName == NULL)
    {
      PrintError("Environment variable HDB_LOCAL not set...\n");
      return(ERROR);
    }
  
  
  if ((result = SqlConnect (dbName, "app_user", dbName)) == ERROR)
    exit (ERROR);
  fprintf(stdout, "Connected to ORACLE.\n");
  
  
  /* get todays date */

  if ((result = SqlGetDate (thisday)) == ERROR)
     exit(ERROR);
  
  SqlDateMath(SUBTRACTION,thisday,hday,8,"dd");
  strcpy(nday,hday);
  
  printf("\n             Flaming Gorge Data (Daily Averages)\n");
  printf("\n        Date            Elevation  Release   Inflow");
  printf("\n                           feet      cfs      cfs");
  
  for (index = 0; index < 7; index++)
    {
      SqlDateMath(ADDITION,nday,nday,1,"dd");
      
      EXEC SQL SELECT VALUE
	INTO :rel:value_null_indicator
	FROM R_DAY
	WHERE SITE_DATATYPE_ID = 1871
	AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
      if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))
	{		
	  /*  	sprintf(dt,"                   \0");*/
	  sprintf(relc,"    ---\0");
	}
      else
	{
	  sprintf(relc,"%7.0f",rel);
	}
      EXEC SQL COMMIT;
      
      EXEC SQL SELECT VALUE
	INTO :wse:value_null_indicator
	FROM R_DAY
	WHERE SITE_DATATYPE_ID = 1927
	AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
      if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))	
	{		
	  sprintf(wsec,"    ---\0");
	}
      else
	{
	  sprintf(wsec,"%7.2f",wse);
	}	  
      EXEC SQL COMMIT;
      
      EXEC SQL SELECT VALUE
	INTO :inf:value_null_indicator
	FROM R_DAY
	WHERE SITE_DATATYPE_ID = 1791
	AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
      if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))	
	{		
	  sprintf(infc,"    ---\0");
	}
      else
	{
	  sprintf(infc,"%7.0f",inf);
	}	  
      EXEC SQL COMMIT;
      
      strncpy(dt,nday,11);
      dt[11] = '\0';	
      
      printf("\n     %s         %s  %s  %s",dt,wsec,relc,infc);
    }
  
  /* begin river flows */	
  if (strncmp(argv[1],"gages",5)==0)
    {
      
      strcpy(nday,hday);
      
      printf("\n\n\n                  Green River/Yampa River Data (Daily Averages)\n");
      printf("\n        Date                 Green River Yampa River  Little Snake  Green River");
      printf("\n                              at Jensen   at Maybell    at Lily    at Green River");
      printf("\n                                 cfs         cfs          cfs           cfs");
      
      for (index = 0; index < 7; index++)
	{
	  SqlDateMath(ADDITION,nday,nday,1,"dd");
	  
	  EXEC SQL SELECT VALUE
	    INTO :jen:value_null_indicator
	    FROM R_DAY
	    WHERE SITE_DATATYPE_ID = 1361
	    AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
	  if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))
	    {		
	      /*      sprintf(dt,"                   \0");*/
	      strcpy(jenc,"    ---\0");
	      
	    }
	  else
	    {
	      sprintf(jenc,"%7.0f",jen);
	    }
	  EXEC SQL COMMIT;
	  
	  EXEC SQL SELECT VALUE
	    INTO :lily:value_null_indicator
	    FROM R_DAY
	    WHERE SITE_DATATYPE_ID = 1337
	    AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
	  
	  if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))
	    {		
	      sprintf(lilyc,"    ---\0");
	    }
	  else
	    {
	      sprintf(lilyc,"%7.0f",lily);
	    }
	  EXEC SQL COMMIT;	
	  
	  EXEC SQL SELECT VALUE
	    INTO :may:value_null_indicator
	    FROM R_DAY
	    WHERE SITE_DATATYPE_ID = 1336
	    AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
	  
	  if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))
	    {		
	      sprintf(mayc,"    ---\0");
	    }
	  else
	    {
	      sprintf(mayc,"%7.0f",may);
	    }
	  EXEC SQL COMMIT;
	  
	  EXEC SQL SELECT VALUE
	    INTO :gre:value_null_indicator
	    FROM R_DAY
	    WHERE SITE_DATATYPE_ID = 1340
	    AND to_char(START_DATE_TIME,'dd-mon-yyyy hh24:mi:ss') = :nday;
	  
	  if ((sqlca.sqlcode > 0) || (value_null_indicator == -1))
	    {		
	      sprintf(grec,"    ---\0");
	    }
	  else
	    {
	      sprintf(grec,"%7.0f",gre);
	    }
	  EXEC SQL COMMIT;
	  
	  strncpy(dt,nday,11);
	  dt[11] = '\0';
	  printf("\n     %s             %s     %s      %s       %s",dt,jenc,mayc,lilyc,grec);	
	  
	}	  
    }
  
  printf("\n\nAll data is provisional and subject to review and modification\n\n");	
  
  if ((result = SqlDisconnect ()) == ERROR)
    exit (ERROR);
  
  exit (0);
  
errrpt:
  
  EXEC SQL WHENEVER SQLERROR CONTINUE;
  printf ("\n %.70s \n",sqlca.sqlerrm.sqlerrmc);
  if ((result = SqlDisconnect ()) == ERROR)
    exit (ERROR);
  
  exit (1); 
  
}
