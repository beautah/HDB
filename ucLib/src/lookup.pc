
/****************************************************************************
* DESCRIPTION
****************************************************************************/

EXEC SQL INCLUDE SQLCA;

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <defines.h>
#include <typedefs.h>
#include <dbutils.h>
#include <utils.h>
#include "ucutils.h"

#define FUNC_NAME    "SqlLookupIds"

/*
<HTML>

<P> <STRONG>Function name:</STRONG> SqlLookupIds

<P> <STRONG>Function signature:</STRONG> SqlLookupIds(char[]*5)

<P> <STRONG>Function description:</STRONG> Looks up the ids for insertion into r_base.

<P><DL> <STRONG>Function arguments:</STRONG>
<BR><DD> char []*5             : The strings to be looked up. Agency, Collection System, Loading Application, Method, Computation
</DL>

<P> <STRONG>Function return value:</STRONG> Returns int, error code. Sets ids defined in header.
<BR>
<P> Useage: SqlLookupIds(agency_name, etc...);
</HTML>
*/


EXEC SQL BEGIN DECLARE SECTION;
  ID agen_id,collection_system_id,loading_application_id,method_id,computation_id;
EXEC SQL END DECLARE SECTION;


int SqlLookupIds (char* agen_name, char* coll_sys_name, char* load_app_name, char* method_name, char* computation_name)
{
  EXEC SQL WHENEVER SQLERROR GOTO errrpt;

  EXEC SQL EXECUTE
    begin
    uchdba.lookup_application(:agen_name,:coll_sys_name,:load_app_name,:method_name,:computation_name,
			      :agen_id,:collection_system_id,:loading_application_id,:method_id,:computation_id);
    end;
  END-EXEC;

  return 0;

 errrpt:
  
  EXEC SQL WHENEVER SQLERROR CONTINUE;
  fprintf (stderr, "\n %.70s \n",sqlca.sqlerrm.sqlerrmc);
  exit (1); 

}

