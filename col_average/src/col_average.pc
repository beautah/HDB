/*	
	col_average
	
	determines the average snow percentage for the Upper Colorado 
	drainage.  Pulls basin values from the database.  Then multiplies
	these values by the contributing percentage (percent water that comes
	from these basins).  Spits out the date and the total at the end.
	
	***************************************************************************/

#include <stdio.h>
#include <string.h>
#include "dbutils.h"
#include "utils.h"
#include "defines.h"
#include "typedefs.h"

main (int argc,char **argv )
     
{
  
  EXEC SQL INCLUDE SQLCA;
  
  EXEC SQL BEGIN DECLARE SECTION;
  char 		data_base[10],
                user_id[10];
  SQL_DATE      day;
  short         value_null_indicator;
  float         value;
  int           id;
  EXEC SQL END DECLARE SECTION;
  
  char *dbName;
  int result;
  float total;
  int index;
  static char basin[][16] = {"Animas         ","Colorado Plat  ","Dolores-San Mig",
			     "Duchesne       ","Gunnison       ","Muddy-Fremont  ",
			     "Price-San Raf  ","Roaring Fork   ","San Juan       ",
			     "Upper Colorado ","Upper Green    ","Yampa-White    "};
  
  ID basin_id[12] = {15,14,10,6,11,12,7,9,16,20,1,3};
  float percent[12] = {0.053,0.032,0.051,0.03,0.152,0.007,0.02,0.086,0.093,0.17,0.156,0.15};
  EXEC SQL WHENEVER SQLERROR GOTO errrpt;
  
  if (argc != 2)
    {
      printf("\nusage: col_average date\ndate format is mm/dd/yyyy\n\n");
      exit(2);
    }
  

   /* set the name of the database */

   dbName = NULL; 
   dbName = getenv("HDB_LOCAL");

   if (dbName == NULL)
   {
      PrintError("Environment variable HDB_LOCAL not set...\n");
      return(ERROR);
   }

   if ((result = SqlConnect (dbName, "app_user", dbName)) == ERROR)
     exit (ERROR);
   
   fprintf(stdout, "Connected to ORACLE.\n");

   /* convert the command line date in nn/dd/yyyy format to an Oracle date */

   if ((result = SqlFormatDate (argv[1], day)) == ERROR)
     exit (ERROR);
  
   total = 0.0;
   value = -999.0;
   
   for (index = 0; index < 12; index++)
    {
      id = basin_id[index];
      EXEC SQL SELECT A.VALUE INTO :value FROM R_DAY A, HDB_SITE_DATATYPE B
	WHERE A.SITE_DATATYPE_ID = B.SITE_DATATYPE_ID
	AND B.SITE_ID = :id
	AND B.DATATYPE_ID = 2
	AND A.START_DATE_TIME = to_date(:day,'dd-mon-yyyy hh24:mi:ss');
      
      /* the following checks to see if no records were returned 
	 if it is 100 this means that no rows were returned
	 make sure that this check is done prior to the commit */
      
      if (sqlca.sqlcode > 0)
	{
	  printf("There is no data in HDB for the %s River Basin on %s\n",basin[index],day);
	  printf("Try a different day\n\n\n");
	  exit(2);
	} 
      EXEC SQL COMMIT;
      printf("The SWE for the %s River Basin on %s is %6.1f\n",basin[index],day,value);
      value = value * percent[index];
      total = total + value;
    }
  
  printf ("\n\nThe integrated average SWE for the entire Upper Colorado River basin is:\n                  %6.1f percent on %s\n\n",total,day);
  
  if ((result = SqlDisconnect ()) == ERROR)
    exit (ERROR);
  
  exit (0);
  
errrpt:
  EXEC SQL WHENEVER SQLERROR CONTINUE;
  printf ("\n %.70s \n",sqlca.sqlerrm.sqlerrmc);
  if ((result = SqlDisconnect ()) == ERROR)
    exit (ERROR);
  
  exit (1); 
  
}
